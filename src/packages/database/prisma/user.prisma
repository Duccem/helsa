enum Role {
  HOSPITAL
  PATIENT
  DOCTOR
  UNDEFINED
}

model User {
  id String @id @default(uuid())

  email         String  @unique
  emailVerified Boolean @default(false)

  name  String
  image String?
  role  Role    @default(UNDEFINED)
  bio   String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Account Account[]
  Session Session[]

  hospital Hospital[]
  patient  Patient?
  doctor   Doctor?

  @@map("user")
}

model Session {
  id        String   @id @default(uuid())
  expiresAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  token     String   @unique
  createdAt DateTime
  updatedAt DateTime

  @@map("session")
}

model Account {
  id                    String    @id @default(uuid())
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  expiresAt             DateTime?
  password              String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String   @id @default(uuid())
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
