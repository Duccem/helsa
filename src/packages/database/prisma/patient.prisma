model Patient {
  id          String @id @default(uuid())
  demographic Json
  biometric   Json

  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  allergies   Allergy[]
  diseases    ChronicDisease[]
  contacts    PatientContact[]
  vaccines    Vaccine[]
  surgeries   Surgery[]

  diagnostics Diagnostic[]
  treatments  Treatment[]
  tests       MedicalTest[]
  documents   MedicalDocument[]
  ratings     Rating[]
  appointments Appointment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum AllergySeverity {
  MILD
  MODERATE
  SEVERE
}

model Allergy {
  id             String          @id @default(uuid())
  name           String
  description    String
  severity       AllergySeverity
  reaction       String
  diagnosticDate DateTime
  patientId      String
  patient        Patient         @relation(fields: [patientId], references: [id])
  treatments      Treatment[]      @relation("AllergyTreatment")
}

enum ChronicDiseaseType {
  GENETIC
  AMBIENTAL
  INFECTIOUS
  HABITUAL
}

model ChronicDisease {
  id             String             @id @default(uuid())
  type           ChronicDiseaseType
  description    String
  diagnosticDate DateTime
  actualState    String
  patientId      String
  patient        Patient            @relation(fields: [patientId], references: [id])
  treatments      Treatment[]       @relation("DiseaseTreatment")
}

model PatientContact {
  id           String  @id @default(uuid())
  name         String
  phone        String
  relationship String
  patientId    String
  patient      Patient @relation(fields: [patientId], references: [id])
}

model Vaccine {
  id          String @id @default(uuid())
  name        String
  dose        Int
  date       DateTime
  notes       String?
  nextDose    DateTime?

  patientId String
  patient   Patient @relation(fields: [patientId], references: [id])
}

model Surgery {
  id          String @id @default(uuid())
  date        DateTime
  type        String
  details     String
  surgeon     String
  hospital    String

  patientId String
  patient   Patient @relation(fields: [patientId], references: [id])
}