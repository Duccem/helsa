"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/nprogress-v2";
exports.ids = ["vendor-chunks/nprogress-v2"];
exports.modules = {

/***/ "(ssr)/../../../node_modules/nprogress-v2/dist/index.mjs":
/*!*********************************************************!*\
  !*** ../../../node_modules/nprogress-v2/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NProgress: () => (/* binding */ NProgress)\n/* harmony export */ });\n// src/utils.ts\nfunction clamp(n, min, max) {\n  return Math.max(min, Math.min(n, max));\n}\nfunction toBarPerc(n, direction) {\n  if (direction === \"rtl\") return (1 - n) * 100;\n  return (-1 + n) * 100;\n}\nfunction css(element, properties, value) {\n  if (typeof properties === \"string\") {\n    if (value !== void 0) {\n      element.style[properties] = value;\n    }\n  } else {\n    for (const prop in properties) {\n      if (properties.hasOwnProperty(prop)) {\n        const val = properties[prop];\n        if (val !== void 0) {\n          element.style[prop] = val;\n        }\n      }\n    }\n  }\n}\nfunction addClass(element, name) {\n  element.classList.add(name);\n}\nfunction removeClass(element, name) {\n  element.classList.remove(name);\n}\nfunction removeElement(element) {\n  if (element && element.parentNode) {\n    element.parentNode.removeChild(element);\n  }\n}\n\n// src/progress.ts\nvar NProgress = class {\n  static settings = {\n    minimum: 0.08,\n    maximum: 1,\n    template: `<div class=\"bar\" role=\"bar\"><div class=\"peg\"></div></div><div class=\"spinner\" role=\"spinner\"><div class=\"spinner-icon\"></div></div>`,\n    easing: \"linear\",\n    positionUsing: \"\",\n    speed: 200,\n    trickle: true,\n    trickleSpeed: 200,\n    showSpinner: true,\n    barSelector: '[role=\"bar\"]',\n    spinnerSelector: '[role=\"spinner\"]',\n    parent: \"body\",\n    direction: \"ltr\"\n  };\n  static status = null;\n  // Queue for animation functions\n  static pending = [];\n  static isPaused = false;\n  // Configure NProgress with new options\n  static configure(options) {\n    Object.assign(this.settings, options);\n    return this;\n  }\n  // Check if NProgress has started\n  static isStarted() {\n    return typeof this.status === \"number\";\n  }\n  // Set the progress status\n  static set(n) {\n    if (this.isPaused) return this;\n    const started = this.isStarted();\n    n = clamp(n, this.settings.minimum, this.settings.maximum);\n    this.status = n === this.settings.maximum ? null : n;\n    const progress = this.render(!started);\n    const bar = progress.querySelector(\n      this.settings.barSelector\n    );\n    const speed = this.settings.speed;\n    const ease = this.settings.easing;\n    progress.offsetWidth;\n    this.queue((next) => {\n      if (this.settings.positionUsing === \"\") {\n        this.settings.positionUsing = this.getPositioningCSS();\n      }\n      css(bar, this.barPositionCSS(n, speed, ease));\n      if (n === this.settings.maximum) {\n        css(progress, { transition: \"none\", opacity: \"1\" });\n        progress.offsetWidth;\n        setTimeout(() => {\n          css(progress, {\n            transition: `all ${speed}ms linear`,\n            opacity: \"0.5\"\n          });\n          setTimeout(() => {\n            this.remove();\n            next();\n          }, speed);\n        }, speed);\n      } else {\n        setTimeout(next, speed);\n      }\n    });\n    return this;\n  }\n  // Start the progress\n  static start() {\n    if (!this.status) this.set(0);\n    const work = () => {\n      if (this.isPaused) return;\n      setTimeout(() => {\n        if (!this.status) return;\n        this.trickle();\n        work();\n      }, this.settings.trickleSpeed);\n    };\n    if (this.settings.trickle) work();\n    return this;\n  }\n  // Complete the progress\n  static done(force) {\n    if (!force && !this.status) return this;\n    return this.inc(0.3 + 0.5 * Math.random()).set(1);\n  }\n  // Increment the progress\n  static inc(amount) {\n    if (this.isPaused) return this;\n    let n = this.status;\n    if (!n) {\n      return this.start();\n    } else if (n > 1) {\n      return this;\n    } else {\n      if (typeof amount !== \"number\") {\n        if (n >= 0 && n < 0.2) {\n          amount = 0.1;\n        } else if (n >= 0.2 && n < 0.5) {\n          amount = 0.04;\n        } else if (n >= 0.5 && n < 0.8) {\n          amount = 0.02;\n        } else if (n >= 0.8 && n < 0.99) {\n          amount = 5e-3;\n        } else {\n          amount = 0;\n        }\n      }\n      n = clamp(n + amount, 0, 0.994);\n      return this.set(n);\n    }\n  }\n  // Advance the progress\n  static trickle() {\n    if (this.isPaused) return this;\n    return this.inc();\n  }\n  // Handle jQuery promises (for compatibility)\n  static promise($promise) {\n    if (!$promise || $promise.state() === \"resolved\") {\n      return this;\n    }\n    let initial = 0, current = 0;\n    if (current === 0) {\n      this.start();\n    }\n    initial++;\n    current++;\n    $promise.always(() => {\n      current--;\n      if (current === 0) {\n        initial = 0;\n        this.done();\n      } else {\n        this.set((initial - current) / initial);\n      }\n    });\n    return this;\n  }\n  // Render the NProgress component\n  static render(fromStart = false) {\n    if (this.isRendered()) {\n      return document.getElementById(\"nprogress\");\n    }\n    addClass(document.documentElement, \"nprogress-busy\");\n    const progress = document.createElement(\"div\");\n    progress.id = \"nprogress\";\n    progress.innerHTML = this.settings.template;\n    const bar = progress.querySelector(\n      this.settings.barSelector\n    );\n    const perc = fromStart ? toBarPerc(0, this.settings.direction) : `${toBarPerc(this.status || 0, this.settings.direction)}`;\n    const parent = typeof this.settings.parent === \"string\" ? document.querySelector(this.settings.parent) : this.settings.parent;\n    css(bar, {\n      transition: \"all 0 linear\",\n      transform: `translate3d(${perc}%,0,0)`\n    });\n    if (!this.settings.showSpinner) {\n      const spinner = progress.querySelector(\n        this.settings.spinnerSelector\n      );\n      spinner && removeElement(spinner);\n    }\n    if (parent !== document.body) {\n      addClass(parent, \"nprogress-custom-parent\");\n    }\n    parent.appendChild(progress);\n    return progress;\n  }\n  // Remove NProgress from the DOM\n  static remove() {\n    removeClass(document.documentElement, \"nprogress-busy\");\n    const parent = typeof this.settings.parent === \"string\" ? document.querySelector(this.settings.parent) : this.settings.parent;\n    removeClass(parent, \"nprogress-custom-parent\");\n    const progress = document.getElementById(\"nprogress\");\n    progress && removeElement(progress);\n  }\n  // Pause the progress\n  static pause() {\n    this.isPaused = true;\n    return this;\n  }\n  // Resume the progress\n  static resume() {\n    this.isPaused = false;\n    return this;\n  }\n  // Check if NProgress is rendered in the DOM\n  static isRendered() {\n    return !!document.getElementById(\"nprogress\");\n  }\n  // Determine the CSS positioning method to use\n  static getPositioningCSS() {\n    const bodyStyle = document.body.style;\n    const vendorPrefix = \"WebkitTransform\" in bodyStyle ? \"Webkit\" : \"MozTransform\" in bodyStyle ? \"Moz\" : \"msTransform\" in bodyStyle ? \"ms\" : \"OTransform\" in bodyStyle ? \"O\" : \"\";\n    if (`${vendorPrefix}Perspective` in bodyStyle) {\n      return \"translate3d\";\n    } else if (`${vendorPrefix}Transform` in bodyStyle) {\n      return \"translate\";\n    } else {\n      return \"margin\";\n    }\n  }\n  // Queue function for animations\n  static queue(fn) {\n    this.pending.push(fn);\n    if (this.pending.length === 1) this.next();\n  }\n  static next() {\n    const fn = this.pending.shift();\n    if (fn) fn(this.next.bind(this));\n  }\n  // Compute the CSS for positioning the bar\n  static barPositionCSS(n, speed, ease) {\n    let barCSS = {};\n    if (this.settings.positionUsing === \"translate3d\") {\n      barCSS = {\n        transform: `translate3d(${toBarPerc(n, this.settings.direction)}%,0,0)`\n      };\n    } else if (this.settings.positionUsing === \"translate\") {\n      barCSS = {\n        transform: `translate(${toBarPerc(n, this.settings.direction)}%,0)`\n      };\n    } else {\n      barCSS = { \"margin-left\": `${toBarPerc(n, this.settings.direction)}%` };\n    }\n    barCSS.transition = `all ${speed}ms ${ease}`;\n    return barCSS;\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../../node_modules/nprogress-v2/dist/index.mjs\n");

/***/ })

};
;